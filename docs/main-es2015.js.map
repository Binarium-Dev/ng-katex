{"version":3,"sources":["/home/garciparedes/development/personal/ng-katex/dist/ng-katex/__ivy_ngcc__/fesm2015/ng-katex.js","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { EventEmitter, Component, Input, Output, ChangeDetectionStrategy, Injectable, Directive, ElementRef, NgModule } from '@angular/core';\nimport { extractMath } from 'extract-math';\nimport { CommonModule } from '@angular/common';\nimport { render, renderToString } from 'katex';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [3, \"katex\", \"katex-options\", \"someEvent\"];\nconst _c1 = [4, \"ngFor\", \"ngForOf\"];\nconst _c2 = [3, \"equation\", \"options\", 4, \"ngIf\", \"ngIfElse\"];\nconst _c3 = [\"text\", \"\"];\nconst _c4 = [3, \"equation\", \"options\"];\nconst _c5 = function (a0) { return { displayMode: a0 }; };\nfunction KatexParagraphComponent_ng_container_1_ng_katex_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng-katex\", _c4);\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"equation\", segment_r1.raw)(\"options\", ɵngcc0.ɵɵpureFunction1(2, _c5, segment_r1.type === \"display\"));\n} }\nfunction KatexParagraphComponent_ng_container_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.value);\n} }\nfunction KatexParagraphComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, KatexParagraphComponent_ng_container_1_ng_katex_1_Template, 1, 4, \"ng-katex\", _c2);\n    ɵngcc0.ɵɵtemplate(2, KatexParagraphComponent_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", null, _c3, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const segment_r1 = ctx.$implicit;\n    const _r3 = ɵngcc0.ɵɵreference(3);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", segment_r1.math)(\"ngIfElse\", _r3);\n} }\nconst _c6 = [3, \"innerHTML\"];\nclass KatexComponent {\n    constructor() {\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    hasError(error) {\n        this.onError.emit(error);\n    }\n}\nKatexComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: KatexComponent, selectors: [[\"ng-katex\"]], factory: function KatexComponent_Factory(t) { return new (t || KatexComponent)(); }, inputs: { equation: \"equation\", options: \"options\" }, outputs: { onError: \"onError\" }, consts: 1, vars: 2, template: function KatexComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", _c0);\n        ɵngcc0.ɵɵlistener(\"someEvent\", function KatexComponent_Template_span_someEvent_0_listener($event) { return ctx.hasError($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"katex\", ctx.equation)(\"katex-options\", ctx.options);\n    } }, directives: function () { return [KatexDirective]; }, encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-katex',\n                template: `\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  `\n            }]\n    }], function () { return []; }, { constructor: [], onError: [{\n            type: Output\n        }], hasError: [], equation: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] });\nKatexComponent.propDecorators = {\n    equation: [{ type: Input }],\n    options: [{ type: Input }],\n    onError: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    KatexComponent.prototype.equation;\n    /** @type {?} */\n    KatexComponent.prototype.options;\n    /** @type {?} */\n    KatexComponent.prototype.onError;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexParagraphComponent {\n    /**\n     * @return {?}\n     */\n    get segments() {\n        return extractMath(this.paragraph);\n    }\n}\nKatexParagraphComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: KatexParagraphComponent, selectors: [[\"ng-katex-paragraph\"]], factory: function KatexParagraphComponent_Factory(t) { return new (t || KatexParagraphComponent)(); }, inputs: { paragraph: \"paragraph\" }, consts: 2, vars: 1, template: function KatexParagraphComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtemplate(1, KatexParagraphComponent_ng_container_1_Template, 4, 2, \"ng-container\", _c1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.segments);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, KatexComponent], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexParagraphComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-katex-paragraph',\n                template: `\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, { segments: [], paragraph: [{\n            type: Input\n        }] });\nKatexParagraphComponent.propDecorators = {\n    paragraph: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    KatexParagraphComponent.prototype.paragraph;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexService {\n    /**\n     * @param {?} equation\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    render(equation, element, options) {\n        return render(equation, element.nativeElement, options);\n    }\n    /**\n     * @param {?} equation\n     * @param {?=} options\n     * @return {?}\n     */\n    renderToString(equation, options) {\n        return renderToString(equation, options);\n    }\n}\nKatexService.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: KatexService, factory: function KatexService_Factory(t) { return new (t || KatexService)(); }, providedIn: null });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexService, [{\n        type: Injectable\n    }], null, { render: [], renderToString: [] });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexDirective {\n    /**\n     * @param {?} el\n     * @param {?} katexService\n     */\n    constructor(el, katexService) {\n        this.el = el;\n        this.katexService = katexService;\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        try {\n            this.katexService.render(this.equation, this.el, this.options);\n        }\n        catch (e) {\n            this.onError.emit(e);\n        }\n    }\n}\nKatexDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: KatexDirective, selectors: [[\"\", \"katex\", \"\"]], factory: function KatexDirective_Factory(t) { return new (t || KatexDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(KatexService)); }, inputs: { equation: [\"katex\", \"equation\"], options: [\"katex-options\", \"options\"] }, outputs: { onError: \"onError\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[katex]'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: KatexService }]; }, { constructor: [], el: [], katexService: [], onError: [{\n            type: Output\n        }], ngOnChanges: [], equation: [{\n            type: Input,\n            args: ['katex']\n        }], options: [{\n            type: Input,\n            args: ['katex-options']\n        }] });\n/** @nocollapse */\nKatexDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: KatexService }\n];\nKatexDirective.propDecorators = {\n    equation: [{ type: Input, args: ['katex',] }],\n    options: [{ type: Input, args: ['katex-options',] }],\n    onError: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    KatexDirective.prototype.equation;\n    /** @type {?} */\n    KatexDirective.prototype.options;\n    /** @type {?} */\n    KatexDirective.prototype.onError;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexDirective.prototype.katexService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexHtmlComponent {\n    /**\n     * @param {?} domSanitizer\n     * @param {?} katexService\n     */\n    constructor(domSanitizer, katexService) {\n        this.domSanitizer = domSanitizer;\n        this.katexService = katexService;\n    }\n    /**\n     * @return {?}\n     */\n    get allHtml() {\n        /** @type {?} */\n        let segments = this.segments;\n        /** @type {?} */\n        var allHtml = segments.map((/**\n         * @param {?} seg\n         * @return {?}\n         */\n        (seg) => {\n            if (seg.math) {\n                return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\n            }\n            else {\n                return seg.value;\n            }\n        })).reduce((/**\n         * @param {?} total\n         * @param {?} current\n         * @return {?}\n         */\n        (total, current) => {\n            return total += current;\n        }));\n        return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n    }\n    /**\n     * @return {?}\n     */\n    get segments() {\n        return extractMath(this.html);\n    }\n}\nKatexHtmlComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: KatexHtmlComponent, selectors: [[\"ng-katex-html\"]], factory: function KatexHtmlComponent_Factory(t) { return new (t || KatexHtmlComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(KatexService)); }, inputs: { html: \"html\" }, consts: 1, vars: 1, template: function KatexHtmlComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", _c6);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.allHtml, ɵngcc0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexHtmlComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-katex-html',\n                template: `<span [innerHTML]=\"allHtml\"></span>`\n            }]\n    }], function () { return [{ type: DomSanitizer }, { type: KatexService }]; }, { constructor: [], domSanitizer: [], katexService: [], allHtml: [], segments: [], html: [{\n            type: Input\n        }] });\n/** @nocollapse */\nKatexHtmlComponent.ctorParameters = () => [\n    { type: DomSanitizer },\n    { type: KatexService }\n];\nKatexHtmlComponent.propDecorators = {\n    html: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    KatexHtmlComponent.prototype.html;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexHtmlComponent.prototype.domSanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexHtmlComponent.prototype.katexService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexModule {\n}\nKatexModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: KatexModule });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(KatexModule, { declarations: function () { return [KatexDirective,\n        KatexComponent,\n        KatexParagraphComponent,\n        KatexHtmlComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [KatexComponent,\n        KatexParagraphComponent,\n        KatexHtmlComponent]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                ],\n                providers: [\n                    KatexService,\n                ],\n                declarations: [\n                    KatexDirective,\n                    KatexComponent,\n                    KatexParagraphComponent,\n                    KatexHtmlComponent\n                ],\n                exports: [\n                    KatexComponent,\n                    KatexParagraphComponent,\n                    KatexHtmlComponent\n                ]\n            }]\n    }], null, null);\nKatexModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function KatexModule_Factory(t) { return new (t || KatexModule)(); }, providers: [\n        KatexService,\n    ], imports: [[\n            CommonModule,\n        ]] });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { KatexComponent, KatexModule, KatexParagraphComponent, KatexService as ɵa, KatexDirective as ɵb, KatexHtmlComponent as ɵc };\n\nexport {KatexHtmlComponent};\n//# sourceMappingURL=ng-katex.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { KatexOptions } from 'ng-katex';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title: string = 'ng-katex';\n  url: string = 'https://github.com/garciparedes/ng-katex';\n  equation: string = 'c = \\\\pm\\\\sqrt{a^2 + b^2}';\n  options: KatexOptions = {\n    displayMode: true,\n  };\n  paragraph: string = \"You can write text, that contains expressions like this: $x ^ 2 + 5$ inside them. As you probably know. You also can write expressions in display mode as follows: $$\\\\sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$$. In first case you will need to use \\\\$expression\\\\$ and in the second one \\\\$\\\\$expression\\\\$\\\\$. To scape the \\\\$ symbol it's mandatory to write as follows: \\\\\\\\$\";\n  html: string = `<div>You can write html, that contains expressions like this: $x ^ 2 + 5$ inside them. As you probably know. You also can write expressions in display mode as follows: $$\\\\sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$$. In first case you will need to use \\\\$expression\\\\$ and in the second one \\\\$\\\\$expression\\\\$\\\\$. To scape the \\\\$ symbol it's mandatory to write as follows: \\\\\\\\$</div><p><button>I'm a button</button></p><strong>I'm strong</strong><div style=\"border: black 1px solid\"><div style=\"display: inline-block; width:48%;\">inner div left</div> | <div style=\"display:inline-block; color: blue; width:48%;\">inner div right</div></div>`;\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<h1>\n  Welcome to <a target=\"_blank\" [href]=\"url\">{{title}}</a> demo app!\n</h1>\n\n<div class=\"container\">\n  <h2>Equation: </h2>\n  <p>Type here your equation:</p>\n  <p><input type=\"text\" [(ngModel)]=\"equation\"></p>\n  <p><ng-katex [equation]=\"equation\" [options]=\"options\"></ng-katex></p>\n\n  <h2>Paragraph: </h2>\n  <p>Type here your paragraph:</p>\n  <p><textarea  [(ngModel)]=\"paragraph\" rows=\"6\"></textarea></p>\n  <ng-katex-paragraph [paragraph]=\"paragraph\"></ng-katex-paragraph>\n\n  <h2>HTML: (Security Note: this bypasses Angular DOM Sanitization)</h2>\n  <p>Type here your HTML:</p>\n  <p><textarea  [(ngModel)]=\"html\" rows=\"6\"></textarea></p>\n  <ng-katex-html [html]=\"html\"></ng-katex-html>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { KatexModule } from 'ng-katex';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    KatexModule,\n    HttpClientModule,\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}