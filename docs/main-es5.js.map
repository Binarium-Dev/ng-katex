{"version":3,"sources":["/home/garciparedes/development/personal/ng-katex/dist/ng-katex/__ivy_ngcc__/fesm2015/ng-katex.js","$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.component.html","src/app/app.module.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Component, Input, Output, ChangeDetectionStrategy, Injectable, Directive, ElementRef, NgModule } from '@angular/core';\nimport { extractMath } from 'extract-math';\nimport { CommonModule } from '@angular/common';\nimport { render, renderToString } from 'katex';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [3, \"katex\", \"katex-options\", \"someEvent\"];\nconst _c1 = [4, \"ngFor\", \"ngForOf\"];\nconst _c2 = [3, \"equation\", \"options\", 4, \"ngIf\", \"ngIfElse\"];\nconst _c3 = [\"text\", \"\"];\nconst _c4 = [3, \"equation\", \"options\"];\nconst _c5 = function (a0) { return { displayMode: a0 }; };\nfunction KatexParagraphComponent_ng_container_1_ng_katex_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng-katex\", _c4);\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"equation\", segment_r1.raw)(\"options\", ɵngcc0.ɵɵpureFunction1(2, _c5, segment_r1.type === \"display\"));\n} }\nfunction KatexParagraphComponent_ng_container_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.value);\n} }\nfunction KatexParagraphComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, KatexParagraphComponent_ng_container_1_ng_katex_1_Template, 1, 4, \"ng-katex\", _c2);\n    ɵngcc0.ɵɵtemplate(2, KatexParagraphComponent_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", null, _c3, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const segment_r1 = ctx.$implicit;\n    const _r3 = ɵngcc0.ɵɵreference(3);\n    ɵngcc0.ɵɵselect(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", segment_r1.math)(\"ngIfElse\", _r3);\n} }\nconst _c6 = [3, \"innerHTML\"];\nclass KatexComponent {\n    constructor() {\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    hasError(error) {\n        this.onError.emit(error);\n    }\n}\nKatexComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: KatexComponent, selectors: [[\"ng-katex\"]], factory: function KatexComponent_Factory(t) { return new (t || KatexComponent)(); }, inputs: { equation: \"equation\", options: \"options\" }, outputs: { onError: \"onError\" }, consts: 1, vars: 2, template: function KatexComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", _c0);\n        ɵngcc0.ɵɵlistener(\"someEvent\", function KatexComponent_Template_span_someEvent_0_listener($event) { return ctx.hasError($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"katex\", ctx.equation)(\"katex-options\", ctx.options);\n    } }, directives: function () { return [KatexDirective]; }, encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-katex',\n                template: `\n    <span [katex]=\"equation\"\n          [katex-options]=\"options\"\n          (someEvent)=\"hasError($event)\">\n    </span>\n  `\n            }]\n    }], function () { return []; }, { constructor: [], onError: [{\n            type: Output\n        }], hasError: [], equation: [{\n            type: Input\n        }], options: [{\n            type: Input\n        }] });\nKatexComponent.propDecorators = {\n    equation: [{ type: Input }],\n    options: [{ type: Input }],\n    onError: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    KatexComponent.prototype.equation;\n    /** @type {?} */\n    KatexComponent.prototype.options;\n    /** @type {?} */\n    KatexComponent.prototype.onError;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexParagraphComponent {\n    /**\n     * @return {?}\n     */\n    get segments() {\n        return extractMath(this.paragraph);\n    }\n}\nKatexParagraphComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: KatexParagraphComponent, selectors: [[\"ng-katex-paragraph\"]], factory: function KatexParagraphComponent_Factory(t) { return new (t || KatexParagraphComponent)(); }, inputs: { paragraph: \"paragraph\" }, consts: 2, vars: 1, template: function KatexParagraphComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtemplate(1, KatexParagraphComponent_ng_container_1_Template, 4, 2, \"ng-container\", _c1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵselect(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.segments);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, KatexComponent], encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexParagraphComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-katex-paragraph',\n                template: `\n    <p>\n      <ng-container *ngFor=\"let segment of segments\">\n        <ng-katex\n          *ngIf=\"segment.math else text\"\n          [equation]=\"segment.raw\"\n          [options]=\"{ displayMode: segment.type === 'display' }\">\n        </ng-katex>\n        <ng-template #text>{{ segment.value }}</ng-template>\n      </ng-container>\n    </p>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], null, { segments: [], paragraph: [{\n            type: Input\n        }] });\nKatexParagraphComponent.propDecorators = {\n    paragraph: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    KatexParagraphComponent.prototype.paragraph;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexService {\n    /**\n     * @param {?} equation\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    render(equation, element, options) {\n        return render(equation, element.nativeElement, options);\n    }\n    /**\n     * @param {?} equation\n     * @param {?=} options\n     * @return {?}\n     */\n    renderToString(equation, options) {\n        return renderToString(equation, options);\n    }\n}\nKatexService.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: KatexService, factory: function KatexService_Factory(t) { return new (t || KatexService)(); }, providedIn: null });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexService, [{\n        type: Injectable\n    }], null, { render: [], renderToString: [] });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexDirective {\n    /**\n     * @param {?} el\n     * @param {?} katexService\n     */\n    constructor(el, katexService) {\n        this.el = el;\n        this.katexService = katexService;\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        try {\n            this.katexService.render(this.equation, this.el, this.options);\n        }\n        catch (e) {\n            this.onError.emit(e);\n        }\n    }\n}\nKatexDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: KatexDirective, selectors: [[\"\", \"katex\", \"\"]], factory: function KatexDirective_Factory(t) { return new (t || KatexDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(KatexService)); }, inputs: { equation: [\"katex\", \"equation\"], options: [\"katex-options\", \"options\"] }, outputs: { onError: \"onError\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[katex]'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: KatexService }]; }, { constructor: [], el: [], katexService: [], onError: [{\n            type: Output\n        }], ngOnChanges: [], equation: [{\n            type: Input,\n            args: ['katex']\n        }], options: [{\n            type: Input,\n            args: ['katex-options']\n        }] });\n/** @nocollapse */\nKatexDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: KatexService }\n];\nKatexDirective.propDecorators = {\n    equation: [{ type: Input, args: ['katex',] }],\n    options: [{ type: Input, args: ['katex-options',] }],\n    onError: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    KatexDirective.prototype.equation;\n    /** @type {?} */\n    KatexDirective.prototype.options;\n    /** @type {?} */\n    KatexDirective.prototype.onError;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexDirective.prototype.katexService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexHtmlComponent {\n    /**\n     * @param {?} domSanitizer\n     * @param {?} katexService\n     */\n    constructor(domSanitizer, katexService) {\n        this.domSanitizer = domSanitizer;\n        this.katexService = katexService;\n    }\n    /**\n     * @return {?}\n     */\n    get allHtml() {\n        /** @type {?} */\n        let segments = this.segments;\n        /** @type {?} */\n        var allHtml = segments.map((/**\n         * @param {?} seg\n         * @return {?}\n         */\n        (seg) => {\n            if (seg.math) {\n                return this.katexService.renderToString(seg.raw, { displayMode: seg.type === 'display' });\n            }\n            else {\n                return seg.value;\n            }\n        })).reduce((/**\n         * @param {?} total\n         * @param {?} current\n         * @return {?}\n         */\n        (total, current) => {\n            return total += current;\n        }));\n        return this.domSanitizer.bypassSecurityTrustHtml(allHtml);\n    }\n    /**\n     * @return {?}\n     */\n    get segments() {\n        return extractMath(this.html);\n    }\n}\nKatexHtmlComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: KatexHtmlComponent, selectors: [[\"ng-katex-html\"]], factory: function KatexHtmlComponent_Factory(t) { return new (t || KatexHtmlComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(KatexService)); }, inputs: { html: \"html\" }, consts: 1, vars: 1, template: function KatexHtmlComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", _c6);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.allHtml, ɵngcc0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexHtmlComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-katex-html',\n                template: `<span [innerHTML]=\"allHtml\"></span>`\n            }]\n    }], function () { return [{ type: DomSanitizer }, { type: KatexService }]; }, { constructor: [], domSanitizer: [], katexService: [], allHtml: [], segments: [], html: [{\n            type: Input\n        }] });\n/** @nocollapse */\nKatexHtmlComponent.ctorParameters = () => [\n    { type: DomSanitizer },\n    { type: KatexService }\n];\nKatexHtmlComponent.propDecorators = {\n    html: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    KatexHtmlComponent.prototype.html;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexHtmlComponent.prototype.domSanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    KatexHtmlComponent.prototype.katexService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass KatexModule {\n}\nKatexModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: KatexModule });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(KatexModule, { declarations: function () { return [KatexDirective,\n        KatexComponent,\n        KatexParagraphComponent,\n        KatexHtmlComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [KatexComponent,\n        KatexParagraphComponent,\n        KatexHtmlComponent]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(KatexModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                ],\n                providers: [\n                    KatexService,\n                ],\n                declarations: [\n                    KatexDirective,\n                    KatexComponent,\n                    KatexParagraphComponent,\n                    KatexHtmlComponent\n                ],\n                exports: [\n                    KatexComponent,\n                    KatexParagraphComponent,\n                    KatexHtmlComponent\n                ]\n            }]\n    }], null, null);\nKatexModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function KatexModule_Factory(t) { return new (t || KatexModule)(); }, providers: [\n        KatexService,\n    ], imports: [[\n            CommonModule,\n        ]] });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { KatexComponent, KatexModule, KatexParagraphComponent, KatexService as ɵa, KatexDirective as ɵb, KatexHtmlComponent as ɵc };\n\nexport {KatexHtmlComponent};\n//# sourceMappingURL=ng-katex.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { KatexOptions } from 'ng-katex';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title: string = 'ng-katex';\n  url: string = 'https://github.com/garciparedes/ng-katex';\n  equation: string = 'c = \\\\pm\\\\sqrt{a^2 + b^2}';\n  options: KatexOptions = {\n    displayMode: true,\n  };\n  paragraph: string = \"You can write text, that contains expressions like this: $x ^ 2 + 5$ inside them. As you probably know. You also can write expressions in display mode as follows: $$\\\\sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$$. In first case you will need to use \\\\$expression\\\\$ and in the second one \\\\$\\\\$expression\\\\$\\\\$. To scape the \\\\$ symbol it's mandatory to write as follows: \\\\\\\\$\";\n  html: string = `<div>You can write html, that contains expressions like this: $x ^ 2 + 5$ inside them. As you probably know. You also can write expressions in display mode as follows: $$\\\\sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$$. In first case you will need to use \\\\$expression\\\\$ and in the second one \\\\$\\\\$expression\\\\$\\\\$. To scape the \\\\$ symbol it's mandatory to write as follows: \\\\\\\\$</div><p><button>I'm a button</button></p><strong>I'm strong</strong><div style=\"border: black 1px solid\"><div style=\"display: inline-block; width:48%;\">inner div left</div> | <div style=\"display:inline-block; color: blue; width:48%;\">inner div right</div></div>`;\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<h1>\n  Welcome to <a target=\"_blank\" [href]=\"url\">{{title}}</a> demo app!\n</h1>\n\n<div class=\"container\">\n  <h2>Equation: </h2>\n  <p>Type here your equation:</p>\n  <p><input type=\"text\" [(ngModel)]=\"equation\"></p>\n  <p><ng-katex [equation]=\"equation\" [options]=\"options\"></ng-katex></p>\n\n  <h2>Paragraph: </h2>\n  <p>Type here your paragraph:</p>\n  <p><textarea  [(ngModel)]=\"paragraph\" rows=\"6\"></textarea></p>\n  <ng-katex-paragraph [paragraph]=\"paragraph\"></ng-katex-paragraph>\n\n  <h2>HTML: (Security Note: this bypasses Angular DOM Sanitization)</h2>\n  <p>Type here your HTML:</p>\n  <p><textarea  [(ngModel)]=\"html\" rows=\"6\"></textarea></p>\n  <ng-katex-html [html]=\"html\"></ng-katex-html>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { KatexModule } from 'ng-katex';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    KatexModule,\n    HttpClientModule,\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}